{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { anecdoteService } from '../services/anecdotes';\nconst anecdotesAtStart = [];\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst asObject = anecdote => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  };\n};\n\nconst orderAnecdotes = anecdotes => anecdotes.sort((anecdoteA, anecdoteB) => anecdoteB.votes - anecdoteA.votes);\n\nconst initialState = orderAnecdotes(anecdotesAtStart.map(asObject));\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState,\n  reducers: {\n    async newAnecdote(state, action) {\n      const anecdote = anecdoteService.createNew(action.payload);\n      return orderAnecdotes([...state, asObject(action.payload)]);\n    },\n\n    addVote(state, action) {\n      const id = action.payload;\n      const anecdoteToChange = state.find(anecdote => anecdote.id === id);\n      const changedAnecdote = { ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      };\n      return orderAnecdotes(state.map(anecdote => anecdote.id === id ? changedAnecdote : anecdote));\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  newAnecdote,\n  addVote,\n  appendAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport default anecdoteSlice.reducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/anecdotes/src/reducers/anecdoteReducer.js"],"names":["createSlice","anecdoteService","anecdotesAtStart","getId","Math","random","toFixed","asObject","anecdote","content","id","votes","orderAnecdotes","anecdotes","sort","anecdoteA","anecdoteB","initialState","map","anecdoteSlice","name","reducers","newAnecdote","state","action","createNew","payload","addVote","anecdoteToChange","find","changedAnecdote","appendAnecdote","push","setAnecdotes","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;;AAEA,MAAMC,KAAK,GAAG,MAAM,CAAC,SAASC,IAAI,CAACC,MAAL,EAAV,EAAyBC,OAAzB,CAAiC,CAAjC,CAApB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7B,SAAO;AACLC,IAAAA,OAAO,EAAED,QADJ;AAELE,IAAAA,EAAE,EAAEP,KAAK,EAFJ;AAGLQ,IAAAA,KAAK,EAAE;AAHF,GAAP;AAKD,CAND;;AAQA,MAAMC,cAAc,GAAGC,SAAS,IAC9BA,SAAS,CAACC,IAAV,CAAe,CAACC,SAAD,EAAYC,SAAZ,KACbA,SAAS,CAACL,KAAV,GAAkBI,SAAS,CAACJ,KAD9B,CADF;;AAMA,MAAMM,YAAY,GAAGL,cAAc,CAACV,gBAAgB,CAACgB,GAAjB,CAAqBX,QAArB,CAAD,CAAnC;AAEA,MAAMY,aAAa,GAAGnB,WAAW,CAAC;AAChCoB,EAAAA,IAAI,EAAE,WAD0B;AAEhCH,EAAAA,YAFgC;AAGhCI,EAAAA,QAAQ,EAAE;AACR,UAAMC,WAAN,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC/B,YAAMhB,QAAQ,GAAGP,eAAe,CAACwB,SAAhB,CAA0BD,MAAM,CAACE,OAAjC,CAAjB;AACA,aAAOd,cAAc,CAAC,CAAC,GAAGW,KAAJ,EAAWhB,QAAQ,CAACiB,MAAM,CAACE,OAAR,CAAnB,CAAD,CAArB;AACD,KAJO;;AAMRC,IAAAA,OAAO,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMd,EAAE,GAAGc,MAAM,CAACE,OAAlB;AAEA,YAAME,gBAAgB,GAAGL,KAAK,CAACM,IAAN,CAAWrB,QAAQ,IAAIA,QAAQ,CAACE,EAAT,KAAgBA,EAAvC,CAAzB;AAEA,YAAMoB,eAAe,GAAG,EACtB,GAAGF,gBADmB;AAEtBjB,QAAAA,KAAK,EAAEiB,gBAAgB,CAACjB,KAAjB,GAAyB;AAFV,OAAxB;AAKA,aAAOC,cAAc,CAACW,KAAK,CAACL,GAAN,CAAUV,QAAQ,IACtCA,QAAQ,CAACE,EAAT,KAAgBA,EAAhB,GAAqBoB,eAArB,GAAuCtB,QADnB,CAAD,CAArB;AAGD,KAnBO;;AAqBRuB,IAAAA,cAAc,CAACR,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACS,IAAN,CAAWR,MAAM,CAACE,OAAlB;AACD,KAvBO;;AAyBRO,IAAAA,YAAY,CAACV,KAAD,EAAQC,MAAR,EAAgB;AAC1B,aAAOA,MAAM,CAACE,OAAd;AACD;;AA3BO;AAHsB,CAAD,CAAjC;AAkCA,OAAO,MAAM;AAAEJ,EAAAA,WAAF;AAAeK,EAAAA,OAAf;AAAwBI,EAAAA,cAAxB;AAAwCE,EAAAA;AAAxC,IAAyDd,aAAa,CAACe,OAA7E;AACP,eAAef,aAAa,CAACgB,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { anecdoteService } from '../services/anecdotes';\n\nconst anecdotesAtStart = [];\n\nconst getId = () => (100000 * Math.random()).toFixed(0)\n\nconst asObject = (anecdote) => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  }\n}\n\nconst orderAnecdotes = anecdotes => (\n  anecdotes.sort((anecdoteA, anecdoteB) => (\n    anecdoteB.votes - anecdoteA.votes\n  ))\n);\n\nconst initialState = orderAnecdotes(anecdotesAtStart.map(asObject));\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState,\n  reducers: {\n    async newAnecdote(state, action) {\n      const anecdote = anecdoteService.createNew(action.payload)\n      return orderAnecdotes([...state, asObject(action.payload)]);\n    },\n\n    addVote(state, action) {\n      const id = action.payload;\n\n      const anecdoteToChange = state.find(anecdote => anecdote.id === id);\n\n      const changedAnecdote = {\n        ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      }\n\n      return orderAnecdotes(state.map(anecdote => \n        anecdote.id === id ? changedAnecdote : anecdote\n      ));\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(state, action) {\n      return action.payload;\n    },\n  },\n})\n\nexport const { newAnecdote, addVote, appendAnecdote, setAnecdotes } = anecdoteSlice.actions;\nexport default anecdoteSlice.reducer;"]},"metadata":{},"sourceType":"module"}