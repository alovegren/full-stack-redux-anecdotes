{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport anecdoteService from '../services/anecdotes';\n\nconst orderAnecdotes = anecdotes => anecdotes.sort((anecdoteA, anecdoteB) => anecdoteB.votes - anecdoteA.votes);\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    // async newAnecdote(state, action) {\n    //   const addedAnecdote = await anecdoteService.createNew(action.payload);\n    //   return orderAnecdotes([...state, addedAnecdote]);\n    // },\n    addVote(state, action) {\n      const id = action.payload;\n      const anecdoteToChange = state.find(anecdote => anecdote.id === id);\n      const changedAnecdote = { ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      };\n      return orderAnecdotes(state.map(anecdote => anecdote.id === id ? changedAnecdote : anecdote));\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(_state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  addVote,\n  appendAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch(setAnecdotes(anecdotes));\n  };\n};\nexport const newAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch(appendAnecdote(newAnecdote));\n  };\n};\nexport default anecdoteSlice.reducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/anecdotes/src/reducers/anecdoteReducer.js"],"names":["createSlice","anecdoteService","orderAnecdotes","anecdotes","sort","anecdoteA","anecdoteB","votes","anecdoteSlice","name","initialState","reducers","addVote","state","action","id","payload","anecdoteToChange","find","anecdote","changedAnecdote","map","appendAnecdote","push","setAnecdotes","_state","actions","initializeAnecdotes","dispatch","getAll","newAnecdote","content","createNew","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEE,MAAMC,cAAc,GAAGC,SAAS,IAChCA,SAAS,CAACC,IAAV,CAAe,CAACC,SAAD,EAAYC,SAAZ,KACbA,SAAS,CAACC,KAAV,GAAkBF,SAAS,CAACE,KAD9B,CADA;;AAMF,MAAMC,aAAa,GAAGR,WAAW,CAAC;AAChCS,EAAAA,IAAI,EAAE,WAD0B;AAEhCC,EAAAA,YAAY,EAAE,EAFkB;AAGhCC,EAAAA,QAAQ,EAAE;AACR;AACA;AACA;AACA;AAEAC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMC,EAAE,GAAGD,MAAM,CAACE,OAAlB;AAEA,YAAMC,gBAAgB,GAAGJ,KAAK,CAACK,IAAN,CAAWC,QAAQ,IAAIA,QAAQ,CAACJ,EAAT,KAAgBA,EAAvC,CAAzB;AAEA,YAAMK,eAAe,GAAG,EACtB,GAAGH,gBADmB;AAEtBV,QAAAA,KAAK,EAAEU,gBAAgB,CAACV,KAAjB,GAAyB;AAFV,OAAxB;AAKA,aAAOL,cAAc,CAACW,KAAK,CAACQ,GAAN,CAAUF,QAAQ,IACtCA,QAAQ,CAACJ,EAAT,KAAgBA,EAAhB,GAAqBK,eAArB,GAAuCD,QADnB,CAAD,CAArB;AAGD,KAnBO;;AAqBRG,IAAAA,cAAc,CAACT,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACU,IAAN,CAAWT,MAAM,CAACE,OAAlB;AACD,KAvBO;;AAyBRQ,IAAAA,YAAY,CAACC,MAAD,EAASX,MAAT,EAAiB;AAC3B,aAAOA,MAAM,CAACE,OAAd;AACD;;AA3BO;AAHsB,CAAD,CAAjC;AAkCA,OAAO,MAAM;AAAEJ,EAAAA,OAAF;AAAWU,EAAAA,cAAX;AAA2BE,EAAAA;AAA3B,IAA4ChB,aAAa,CAACkB,OAAhE;AAEP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMzB,SAAS,GAAG,MAAMF,eAAe,CAAC4B,MAAhB,EAAxB;AACAD,IAAAA,QAAQ,CAACJ,YAAY,CAACrB,SAAD,CAAb,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAM2B,WAAW,GAAIC,OAAD,IAAa;AACtC,SAAO,MAAMH,QAAN,IAAkB;AACvB,UAAME,WAAW,GAAG,MAAM7B,eAAe,CAAC+B,SAAhB,CAA0BD,OAA1B,CAA1B;AACAH,IAAAA,QAAQ,CAACN,cAAc,CAACQ,WAAD,CAAf,CAAR;AACD,GAHD;AAID,CALM;AAOP,eAAetB,aAAa,CAACyB,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport anecdoteService from '../services/anecdotes';\n\n  const orderAnecdotes = anecdotes => (\n  anecdotes.sort((anecdoteA, anecdoteB) => (\n    anecdoteB.votes - anecdoteA.votes\n  ))\n);\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    // async newAnecdote(state, action) {\n    //   const addedAnecdote = await anecdoteService.createNew(action.payload);\n    //   return orderAnecdotes([...state, addedAnecdote]);\n    // },\n\n    addVote(state, action) {\n      const id = action.payload;\n\n      const anecdoteToChange = state.find(anecdote => anecdote.id === id);\n\n      const changedAnecdote = {\n        ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      }\n\n      return orderAnecdotes(state.map(anecdote => \n        anecdote.id === id ? changedAnecdote : anecdote\n      ));\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(_state, action) {\n      return action.payload;\n    },\n  },\n})\n\nexport const { addVote, appendAnecdote, setAnecdotes } = anecdoteSlice.actions;\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch(setAnecdotes(anecdotes));\n  }\n}\n\nexport const newAnecdote = (content) => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch(appendAnecdote(newAnecdote));\n  }\n}\n\nexport default anecdoteSlice.reducer;"]},"metadata":{},"sourceType":"module"}