{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { anecdoteService } from '../services/anecdotes'; // const anecdotesAtStart = [];\n\nconst getId = () => (100000 * Math.random()).toFixed(0); // const asObject = (anecdote) => {\n//   return {\n//     content: anecdote,\n//     id: getId(),\n//     votes: 0\n//   }\n// }\n\n\nconst orderAnecdotes = anecdotes => anecdotes.sort((anecdoteA, anecdoteB) => anecdoteB.votes - anecdoteA.votes);\n\nconst initialState = orderAnecdotes(anecdotesAtStart.map(asObject));\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState,\n  reducers: {\n    async newAnecdote(state, action) {\n      const anecdote = anecdoteService.createNew(action.payload);\n      return orderAnecdotes([...state, asObject(action.payload)]);\n    },\n\n    addVote(state, action) {\n      const id = action.payload;\n      const anecdoteToChange = state.find(anecdote => anecdote.id === id);\n      const changedAnecdote = { ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      };\n      return orderAnecdotes(state.map(anecdote => anecdote.id === id ? changedAnecdote : anecdote));\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  newAnecdote,\n  addVote,\n  appendAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport default anecdoteSlice.reducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/anecdotes/src/reducers/anecdoteReducer.js"],"names":["createSlice","anecdoteService","getId","Math","random","toFixed","orderAnecdotes","anecdotes","sort","anecdoteA","anecdoteB","votes","initialState","anecdotesAtStart","map","asObject","anecdoteSlice","name","reducers","newAnecdote","state","action","anecdote","createNew","payload","addVote","id","anecdoteToChange","find","changedAnecdote","appendAnecdote","push","setAnecdotes","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,uBAAhC,C,CAEA;;AAEA,MAAMC,KAAK,GAAG,MAAM,CAAC,SAASC,IAAI,CAACC,MAAL,EAAV,EAAyBC,OAAzB,CAAiC,CAAjC,CAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,cAAc,GAAGC,SAAS,IAC9BA,SAAS,CAACC,IAAV,CAAe,CAACC,SAAD,EAAYC,SAAZ,KACbA,SAAS,CAACC,KAAV,GAAkBF,SAAS,CAACE,KAD9B,CADF;;AAMA,MAAMC,YAAY,GAAGN,cAAc,CAACO,gBAAgB,CAACC,GAAjB,CAAqBC,QAArB,CAAD,CAAnC;AAEA,MAAMC,aAAa,GAAGhB,WAAW,CAAC;AAChCiB,EAAAA,IAAI,EAAE,WAD0B;AAEhCL,EAAAA,YAFgC;AAGhCM,EAAAA,QAAQ,EAAE;AACR,UAAMC,WAAN,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC/B,YAAMC,QAAQ,GAAGrB,eAAe,CAACsB,SAAhB,CAA0BF,MAAM,CAACG,OAAjC,CAAjB;AACA,aAAOlB,cAAc,CAAC,CAAC,GAAGc,KAAJ,EAAWL,QAAQ,CAACM,MAAM,CAACG,OAAR,CAAnB,CAAD,CAArB;AACD,KAJO;;AAMRC,IAAAA,OAAO,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMK,EAAE,GAAGL,MAAM,CAACG,OAAlB;AAEA,YAAMG,gBAAgB,GAAGP,KAAK,CAACQ,IAAN,CAAWN,QAAQ,IAAIA,QAAQ,CAACI,EAAT,KAAgBA,EAAvC,CAAzB;AAEA,YAAMG,eAAe,GAAG,EACtB,GAAGF,gBADmB;AAEtBhB,QAAAA,KAAK,EAAEgB,gBAAgB,CAAChB,KAAjB,GAAyB;AAFV,OAAxB;AAKA,aAAOL,cAAc,CAACc,KAAK,CAACN,GAAN,CAAUQ,QAAQ,IACtCA,QAAQ,CAACI,EAAT,KAAgBA,EAAhB,GAAqBG,eAArB,GAAuCP,QADnB,CAAD,CAArB;AAGD,KAnBO;;AAqBRQ,IAAAA,cAAc,CAACV,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACW,IAAN,CAAWV,MAAM,CAACG,OAAlB;AACD,KAvBO;;AAyBRQ,IAAAA,YAAY,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AAC1B,aAAOA,MAAM,CAACG,OAAd;AACD;;AA3BO;AAHsB,CAAD,CAAjC;AAkCA,OAAO,MAAM;AAAEL,EAAAA,WAAF;AAAeM,EAAAA,OAAf;AAAwBK,EAAAA,cAAxB;AAAwCE,EAAAA;AAAxC,IAAyDhB,aAAa,CAACiB,OAA7E;AACP,eAAejB,aAAa,CAACkB,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { anecdoteService } from '../services/anecdotes';\n\n// const anecdotesAtStart = [];\n\nconst getId = () => (100000 * Math.random()).toFixed(0)\n\n// const asObject = (anecdote) => {\n//   return {\n//     content: anecdote,\n//     id: getId(),\n//     votes: 0\n//   }\n// }\n\nconst orderAnecdotes = anecdotes => (\n  anecdotes.sort((anecdoteA, anecdoteB) => (\n    anecdoteB.votes - anecdoteA.votes\n  ))\n);\n\nconst initialState = orderAnecdotes(anecdotesAtStart.map(asObject));\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState,\n  reducers: {\n    async newAnecdote(state, action) {\n      const anecdote = anecdoteService.createNew(action.payload);\n      return orderAnecdotes([...state, asObject(action.payload)]);\n    },\n\n    addVote(state, action) {\n      const id = action.payload;\n\n      const anecdoteToChange = state.find(anecdote => anecdote.id === id);\n\n      const changedAnecdote = {\n        ...anecdoteToChange,\n        votes: anecdoteToChange.votes + 1\n      }\n\n      return orderAnecdotes(state.map(anecdote => \n        anecdote.id === id ? changedAnecdote : anecdote\n      ));\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(state, action) {\n      return action.payload;\n    },\n  },\n})\n\nexport const { newAnecdote, addVote, appendAnecdote, setAnecdotes } = anecdoteSlice.actions;\nexport default anecdoteSlice.reducer;"]},"metadata":{},"sourceType":"module"}