{"ast":null,"code":"var _jsxFileName = \"/home/missy/full_stack_open_course/part6/anecdotes/src/components/AnecdoteList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addVote } from '../reducers/anecdoteReducer';\nimport { displayNotification } from '../reducers/notificationReducer';\nimport { filterAll, filterBy } from '../reducers/filterReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnecdoteList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  dispatch(filterAll(useSelector(state => state.anecdotes)));\n  const anecdotes = useSelector(state => state.filter); // instead of directly accessing anecdotes on state we should access state.filter\n\n  const vote = id => {\n    dispatch(addVote(id));\n  };\n\n  const notify = message => {\n    dispatch(displayNotification(message));\n    setTimeout(() => {\n      dispatch(displayNotification(''));\n    }, 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: anecdotes.map(anecdote => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [anecdote.content, \" has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          vote(anecdote.id);\n          notify(`You voted for ${anecdote.content}`);\n        },\n        children: \"vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AnecdoteList, \"5dTHO0KnQWeo2+Ri4Ci74ufA0aA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AnecdoteList;\nexport default AnecdoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnecdoteList\");","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/anecdotes/src/components/AnecdoteList.js"],"names":["useSelector","useDispatch","addVote","displayNotification","filterAll","filterBy","AnecdoteList","dispatch","state","anecdotes","filter","vote","id","notify","message","setTimeout","map","anecdote","content","votes"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,2BAApC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAM,EAAAA,QAAQ,CAACH,SAAS,CAACJ,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAAZ,CAAV,CAAR;AACA,QAAMA,SAAS,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACE,MAAhB,CAA7B,CAJyB,CAKzB;;AAGA,QAAMC,IAAI,GAAIC,EAAD,IAAQ;AACnBL,IAAAA,QAAQ,CAACL,OAAO,CAACU,EAAD,CAAR,CAAR;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAIC,OAAD,IAAa;AAC1BP,IAAAA,QAAQ,CAACJ,mBAAmB,CAACW,OAAD,CAApB,CAAR;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfR,MAAAA,QAAQ,CAACJ,mBAAmB,CAAC,EAAD,CAApB,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAOA,sBACE;AAAA,cACGM,SAAS,CAACO,GAAV,CAAcC,QAAQ,iBACrB;AAAA,iBACGA,QAAQ,CAACC,OADZ,WAC0BD,QAAQ,CAACE,KADnC,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBR,UAAAA,IAAI,CAACM,QAAQ,CAACL,EAAV,CAAJ;AACAC,UAAAA,MAAM,CAAE,iBAAgBI,QAAQ,CAACC,OAAQ,EAAnC,CAAN;AACD,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAASD,QAAQ,CAACL,EAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhCD;;GAAMN,Y;UACaL,W,EAEED,W,EACDA,W;;;KAJdM,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport { addVote } from '../reducers/anecdoteReducer';\nimport { displayNotification } from '../reducers/notificationReducer';\nimport { filterAll, filterBy } from '../reducers/filterReducer';\n\nconst AnecdoteList = () => {\n  const dispatch = useDispatch();\n\n  dispatch(filterAll(useSelector(state => state.anecdotes)));\n  const anecdotes = useSelector(state => state.filter);\n  // instead of directly accessing anecdotes on state we should access state.filter\n\n\n  const vote = (id) => {\n    dispatch(addVote(id));\n  }\n\n  const notify = (message) => {\n    dispatch(displayNotification(message));\n    setTimeout(() => {\n      dispatch(displayNotification(''));\n    }, 5000);\n  }\n\n  return (\n    <ul>\n      {anecdotes.map(anecdote => (\n        <li key={anecdote.id}>\n          {anecdote.content} has {anecdote.votes}\n          <button onClick={() => {\n            vote(anecdote.id);\n            notify(`You voted for ${anecdote.content}`);\n          }}>vote</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default AnecdoteList;"]},"metadata":{},"sourceType":"module"}