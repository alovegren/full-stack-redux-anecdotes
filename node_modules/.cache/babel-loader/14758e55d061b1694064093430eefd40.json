{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport anecdoteService from '../services/anecdotes';\n\nconst orderAnecdotes = anecdotes => anecdotes.sort((anecdoteA, anecdoteB) => anecdoteB.votes - anecdoteA.votes);\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    updateAnecdote(state, action) {\n      const id = action.payload.id;\n      const changedAnecdote = action.payload;\n      return orderAnecdotes(state.map(anecdote => anecdote.id === id ? changedAnecdote : anecdote));\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(_state, action) {\n      return action.payload;\n    }\n\n  }\n}); // export const { updateAnecdote, appendAnecdote, setAnecdotes } = anecdoteSlice.actions;\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch(setAnecdotes(anecdotes));\n  };\n};\nexport const newAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch(appendAnecdote(newAnecdote));\n  };\n};\nexport const addVote = anecdote => {\n  return async dispatch => {\n    anecdote = { ...anecdote,\n      votes: anecdote.votes + 1\n    };\n    const updatedAnecdote = await anecdoteService.update(anecdote);\n    dispatch(updateAnecdote(updatedAnecdote));\n  };\n};\nexport default anecdoteSlice.reducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/anecdotes/src/reducers/anecdoteReducer.js"],"names":["createSlice","anecdoteService","orderAnecdotes","anecdotes","sort","anecdoteA","anecdoteB","votes","anecdoteSlice","name","initialState","reducers","updateAnecdote","state","action","id","payload","changedAnecdote","map","anecdote","appendAnecdote","push","setAnecdotes","_state","initializeAnecdotes","dispatch","getAll","newAnecdote","content","createNew","addVote","updatedAnecdote","update","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEE,MAAMC,cAAc,GAAGC,SAAS,IAChCA,SAAS,CAACC,IAAV,CAAe,CAACC,SAAD,EAAYC,SAAZ,KACbA,SAAS,CAACC,KAAV,GAAkBF,SAAS,CAACE,KAD9B,CADA;;AAMF,MAAMC,aAAa,GAAGR,WAAW,CAAC;AAChCS,EAAAA,IAAI,EAAE,WAD0B;AAEhCC,EAAAA,YAAY,EAAE,EAFkB;AAGhCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMC,EAAE,GAAGD,MAAM,CAACE,OAAP,CAAeD,EAA1B;AACA,YAAME,eAAe,GAAGH,MAAM,CAACE,OAA/B;AAEA,aAAOd,cAAc,CAACW,KAAK,CAACK,GAAN,CAAUC,QAAQ,IACtCA,QAAQ,CAACJ,EAAT,KAAgBA,EAAhB,GAAqBE,eAArB,GAAuCE,QADnB,CAAD,CAArB;AAGD,KARO;;AAURC,IAAAA,cAAc,CAACP,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACQ,IAAN,CAAWP,MAAM,CAACE,OAAlB;AACD,KAZO;;AAcRM,IAAAA,YAAY,CAACC,MAAD,EAAST,MAAT,EAAiB;AAC3B,aAAOA,MAAM,CAACE,OAAd;AACD;;AAhBO;AAHsB,CAAD,CAAjC,C,CAuBA;;AAEA,OAAO,MAAMQ,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMtB,SAAS,GAAG,MAAMF,eAAe,CAACyB,MAAhB,EAAxB;AACAD,IAAAA,QAAQ,CAACH,YAAY,CAACnB,SAAD,CAAb,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMwB,WAAW,GAAIC,OAAD,IAAa;AACtC,SAAO,MAAMH,QAAN,IAAkB;AACvB,UAAME,WAAW,GAAG,MAAM1B,eAAe,CAAC4B,SAAhB,CAA0BD,OAA1B,CAA1B;AACAH,IAAAA,QAAQ,CAACL,cAAc,CAACO,WAAD,CAAf,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAIX,QAAD,IAAc;AACnC,SAAO,MAAMM,QAAN,IAAkB;AACvBN,IAAAA,QAAQ,GAAG,EAAE,GAAGA,QAAL;AAAeZ,MAAAA,KAAK,EAAEY,QAAQ,CAACZ,KAAT,GAAiB;AAAvC,KAAX;AACA,UAAMwB,eAAe,GAAG,MAAM9B,eAAe,CAAC+B,MAAhB,CAAuBb,QAAvB,CAA9B;AACAM,IAAAA,QAAQ,CAACb,cAAc,CAACmB,eAAD,CAAf,CAAR;AACD,GAJD;AAKD,CANM;AAQP,eAAevB,aAAa,CAACyB,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport anecdoteService from '../services/anecdotes';\n\n  const orderAnecdotes = anecdotes => (\n  anecdotes.sort((anecdoteA, anecdoteB) => (\n    anecdoteB.votes - anecdoteA.votes\n  ))\n);\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    updateAnecdote(state, action) {\n      const id = action.payload.id\n      const changedAnecdote = action.payload;\n\n      return orderAnecdotes(state.map(anecdote => \n        anecdote.id === id ? changedAnecdote : anecdote\n      ));\n    },\n\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n\n    setAnecdotes(_state, action) {\n      return action.payload;\n    },\n  },\n})\n\n// export const { updateAnecdote, appendAnecdote, setAnecdotes } = anecdoteSlice.actions;\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch(setAnecdotes(anecdotes));\n  }\n}\n\nexport const newAnecdote = (content) => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch(appendAnecdote(newAnecdote));\n  }\n}\n\nexport const addVote = (anecdote) => {\n  return async dispatch => {\n    anecdote = { ...anecdote, votes: anecdote.votes + 1 };\n    const updatedAnecdote = await anecdoteService.update(anecdote);\n    dispatch(updateAnecdote(updatedAnecdote));\n  }\n}\n\nexport default anecdoteSlice.reducer;"]},"metadata":{},"sourceType":"module"}