{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = \"\";\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    displayNotification(_state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  displayNotification\n} = notificationSlice.actions;\nexport const setNotification = (message, durationInSeconds) => {\n  console.log(durationInSeconds);\n  return async dispatch => {\n    dispatch(displayNotification(message));\n    setTimeout(() => {\n      dispatch(displayNotification(''));\n    }, durationInSeconds * 1000);\n  };\n};\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/anecdotes/src/reducers/notificationReducer.js"],"names":["createSlice","initialState","notificationSlice","name","reducers","displayNotification","_state","action","payload","actions","setNotification","message","durationInSeconds","console","log","dispatch","setTimeout","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAE,cAD8B;AAEpCF,EAAAA,YAFoC;AAGpCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,CAACC,MAAD,EAASC,MAAT,EAAiB;AAClC,aAAOA,MAAM,CAACC,OAAd;AACD;;AAHO;AAH0B,CAAD,CAArC;AAUA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAA0BH,iBAAiB,CAACO,OAAlD;AAEP,OAAO,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,iBAAV,KAAgC;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AACA,SAAO,MAAMG,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACV,mBAAmB,CAACM,OAAD,CAApB,CAAR;AACAK,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAACV,mBAAmB,CAAC,EAAD,CAApB,CAAR;AACD,KAFS,EAENO,iBAAiB,GAAG,IAFd,CAAV;AAGD,GALD;AAMD,CARM;AAUP,eAAeV,iBAAiB,CAACe,OAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = \"\"\n\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    displayNotification(_state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { displayNotification } = notificationSlice.actions;\n\nexport const setNotification = (message, durationInSeconds) => {\n  console.log(durationInSeconds);  \n  return async dispatch => {\n    dispatch(displayNotification(message));\n    setTimeout(() => {\n      dispatch(displayNotification(''));\n    }, (durationInSeconds * 1000));\n  }  \n}\n\nexport default notificationSlice.reducer;"]},"metadata":{},"sourceType":"module"}